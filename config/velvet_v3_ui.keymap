#include "keys_ru.h"
#include <dt-bindings/zmk/input_transform.h>
#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        cap_sen: cap_sen {
            compatible = "zmk,behavior-hold-tap";
            label = "CAP_SEN";
            bindings = <&mo>, <&mkp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            hold-while-undecided;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        mouse {
            bindings = <
&kp PRINTSCREEN  &trans  &trans          &kp UP          &trans           &kp TAB                         &trans     &trans     &kp BACKSPACE  &trans     &trans  &kp DELETE
&trans           &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LEFT_SHIFT                  &trans     &kp ENTER  &mkp MB3       &kp ESC    &trans  &kp SPACE
&trans           &trans  &trans          &trans          &kp LEFT_ALT     &kp LCTRL                       &kp LC(Z)  &mkp LCLK  &mo 5          &mkp RCLK  &mo 6   &kp LC(S)
                         &trans          &trans          &to 8            &mo 4           &to 1    &mo 7  &mo 2      &trans     &kp LC(C)      &kp LC(V)
            >;

            display-name = "Mouse";
        };

        base {
            bindings = <
&kp ESC    &kp Q  &kp W     &kp E     &kp R      &kp T                        &kp Y  &kp U   &kp I      &kp O     &kp P     &kp BSPC
&kp TAB    &kp A  &kp S     &kp D     &kp F      &kp G                        &kp H  &kp J   &kp K      &kp L     &kp SEMI  &kp BSLH
&kp LSHFT  &kp Z  &kp X     &kp C     &kp V      &kp B                        &kp N  &kp M   &kp COMMA  &kp DOT   &kp SQT   &kp RSHFT
                  &kp LALT  &kp LGUI  &kp LCTRL  &mo 2  &kp SPACE    &kp RET  &to 0  &trans  &kp LBKT   &kp RBKT
            >;

            display-name = "Base";
        };

        Calculate {
            bindings = <
&trans  &trans  &trans  &trans              &kp COLON  &kp SEMI                     &kp BACKSPACE   &kp N7  &kp N8  &kp N9     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&trans  &trans  &trans  &kp DQT             &kp QMARK  &kp COMMA                    &kp LEFT_SHIFT  &kp N4  &kp N5  &kp N6     &kp MINUS             &kp PLUS
&trans  &trans  &trans  &kp LA(LEFT_SHIFT)  &kp EXCL   &kp DOT                      &kp LCTRL       &kp N1  &kp N2  &kp N3     &kp ASTERISK          &kp SLASH
                &trans  &trans              &trans     &trans     &trans    &trans  &trans          &trans  &kp N0  &kp ENTER
            >;

            display-name = "User3";
        };

        adj {
            bindings = <
&bootloader  &none  &kp F1  &kp F2   &kp F3   &kp F4                   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2      &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&none        &none  &kp F5  &kp F6   &kp F7   &kp F8                   &out OUT_BLE  &kp C_VOL_DN  &kp K_MUTE        &kp C_VOL_UP  &none         &studio_unlock
&none        &none  &kp F9  &kp F10  &kp F11  &kp F12                  &out OUT_USB  &kp K_PREV    &kp K_PLAY_PAUSE  &kp K_NEXT    &none         &none
                    &none   &none    &none    &none    &none    &none  &to 0         &none         &none             &none
            >;

            display-name = "Adjust";
        };

        sym {
            bindings = <
&trans  &trans    &kp LT    &kp EQUAL  &kp GT    &kp GRAVE                      &kp CARET  &kp DQT   &kp UNDER  &kp SQT   &trans    &trans
&trans  &kp BSLH  &kp LPAR  &kp MINUS  &kp RPAR  &kp PLUS                       &kp PRCNT  &kp LBRC  &kp SEMI   &kp RBRC  &kp EXCL  &kp QUESTION
&trans  &trans    &kp STAR  &kp COLON  &kp FSLH  &kp DLLR                       &kp AT     &kp PIPE  &kp TILDE  &kp AMPS  &trans    &trans
                  &trans    &trans     &trans    &mo 4      &kp HASH    &trans  &to 0      &trans    &trans     &trans
            >;

            display-name = "Symbols";
        };

        skroll {
            bindings = <
&none  &none  &none  &none  &none  &none                  &none  &none   &none  &none  &none  &none
&none  &none  &none  &none  &none  &none                  &none  &none   &none  &none  &none  &none
&none  &none  &none  &none  &none  &none                  &none  &none   &none  &none  &none  &none
              &none  &none  &none  &none  &none    &none  &none  &trans  &none  &none
            >;
        };

        sniper {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;
        };

        command {
            bindings = <
&trans  &trans  &trans  &trans  &trans        &kp TAB                           &kp Q      &kp E     &kp R      &kp SQT  &kp DOT           &kp RIGHT_BRACKET
&trans  &trans  &trans  &trans  &trans        &kp LEFT_SHIFT                    &kp A      &kp SEMI  &kp EQUAL  &kp H    &kp LEFT_BRACKET  &kp L
&trans  &trans  &trans  &trans  &kp LEFT_ALT  &kp LCTRL                         &kp COMMA  &kp N     &kp M      &kp O    &kp P             &kp Y
                &trans  &trans  &trans        &trans          &trans    &trans  &kp MINUS  &trans    &kp F      &kp J
            >;
        };

        Game {
            bindings = <
&trans          &kp N1        &kp Q   &kp W   &kp E   &kp R                        &trans  &trans     &trans  &trans     &trans  &trans
&kp LEFT_SHIFT  &kp N2        &kp A   &kp S   &kp D   &trans                       &trans  &trans     &trans  &trans     &trans  &trans
&kp LCTRL       &kp NUMBER_3  &trans  &trans  &kp C   &kp B                        &trans  &mkp LCLK  &trans  &mkp RCLK  &mo 6   &trans
                              &trans  &kp V   &trans  &kp X   &kp SPACE    &trans  &to 0   &trans     &trans  &trans
            >;
        };
    };
};

&trackball { cpi = <1200>; };

&trackball_listener {
    input-processors = <&zip_xy_scaler 9 20>;

    scroller {
        layers = <5>;
        input-processors =
            <&zip_xy_transform INPUT_TRANSFORM_Y_INVERT>,
            <&zip_xy_scaler 1 32>,
            <&zip_xy_to_scroll_mapper>;
    };

    sniper {
        layers = <8>;
        input-processors = <&zip_xy_scaler 1 6>;
    };
};
